package com.app.file;

import java.io.IOException;
import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

/**
 * Servlet implementation class UploadFile
 */
@WebServlet("/UploadFile")
public class UploadFile extends HttpServlet {
	private static final long serialVersionUID = 1L;
       
    /**
     * @see HttpServlet#HttpServlet()
     */
    public UploadFile() {
        super();
        // TODO Auto-generated constructor stub
    }

	/**
	 * @see HttpServlet#doGet(HttpServletRequest request, HttpServletResponse response)
	 */
	protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		// TODO Auto-generated method stub
	}

	/**
	 * @see HttpServlet#doPost(HttpServletRequest request, HttpServletResponse response)
	 */
	protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		// TODO Auto-generated method stub
		 HttpSession session=req.getSession();
	        String container = (String) session.getAttribute("username");
	 
			SwiftApi swift = SwiftUtil.getSwift();
			
			ObjectApi objectApi = swift.getObjectApi("RegionOne", container);
			
			DiskFileItemFactory factory = new DiskFileItemFactory();
			ServletFileUpload upload = new ServletFileUpload(factory);
			String fileName = null;
			InputStream in = null;
			try {
				Map<String, List<FileItem>> list = upload.parseParameterMap(req);
				Iterator i = list.get("myfile").iterator();
				
				 while ( i.hasNext () ) 
		         {
		            FileItem fi = (FileItem)i.next();
		            if ( !fi.isFormField () )	
		            {
		            fileName = fi.getName(); 
		            in = fi.getInputStream();  
		            in.close();
		            }
		         }
			} catch (FileUploadException e) {
				e.printStackTrace();
			}
			
			Payload payload = new InputStreamPayload(in);
			
			String path = req.getParameter("Path");

			String ret = objectApi.put(path+"/"+fileName, payload);
			
			session.setAttribute("path",path);
			 RequestDispatcher disp = req.getRequestDispatcher("/ListObjects");
		        disp.forward(req, resp);     
	}

}
